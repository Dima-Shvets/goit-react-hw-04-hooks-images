{"version":3,"sources":["components/Modal/Modal.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Button/Button.module.scss","components/Searchbar/Searchbar.module.scss","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","services/picture-service.js","App.js","reportWebVitals.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.scss"],"names":["module","exports","ImageGalleryItem","clickHandler","picture","webformatURL","largeImageURL","tags","id","className","s","onClick","src","alt","ImageGallery","toggleModal","getModalPicture","pictures","pictureClickHandler","map","Searchbar","formSubmitHandler","useState","searchQuery","setSearchQuery","SearchForm","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","target","Button","btnHandler","prototype","PropTypes","func","isRequired","modalRoot","document","getElementById","Modal","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","currentTarget","BASE_URL","ACCESS_KEY","page","a","url","fetch","then","res","json","hits","Status","App","setPictures","setPage","modalOpen","setModalOpen","modalPicture","setModalPicture","status","setStatus","pictureService","prevState","color","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.99d5cb8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__cGB43\",\"Modal\":\"Modal_Modal__3uCRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2ETaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__30Ax2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3dnh_\",\"SearchForm\":\"Searchbar_SearchForm__1-qGV\",\"SearchForm-button\":\"Searchbar_SearchForm-button__34nM6\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2YvMD\",\"SearchForm-input\":\"Searchbar_SearchForm-input__XNF8B\"};","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.scss';\r\n\r\nexport function ImageGalleryItem({ clickHandler, picture }) {\r\n  const { webformatURL, largeImageURL, tags, id } = picture;\r\n\r\n  return (\r\n    <li\r\n      className={s.ImageGalleryItem}\r\n      onClick={() => clickHandler(largeImageURL, tags)}\r\n    >\r\n      <img\r\n        className={s['ImageGalleryItem-image']}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        id={id}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  picture: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.scss';\r\n\r\nexport function ImageGallery({ toggleModal, getModalPicture, pictures }) {\r\n  const pictureClickHandler = (largeImageURL, tags) => {\r\n    toggleModal();\r\n    getModalPicture(largeImageURL, tags);\r\n  };\r\n\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {pictures.map(picture => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={picture.id}\r\n            picture={picture}\r\n            clickHandler={pictureClickHandler}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  pictures: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n  getModalPicture: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.scss';\r\n\r\nexport function Searchbar({ formSubmitHandler }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const inputHandler = e => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (searchQuery.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    formSubmitHandler(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={submitHandler}>\r\n        <button type=\"submit\" className={s['SearchForm-button']}>\r\n          <span className={s['SearchForm-button-label']}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s['SearchForm-input']}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={inputHandler}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  formSubmitHandler: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.scss';\r\n\r\nexport function Button({ btnHandler }) {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={() => btnHandler()}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.prototype = {\r\n  btnHandler: PropTypes.func.isRequired,\r\n};\r\n","import { createPortal } from 'react-dom';\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.scss';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nexport function Modal({ toggleModal, picture }) {\r\n  const overlayClickHandler = e => {\r\n    if (e.target === e.currentTarget) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', toggleModal);\r\n    return () => {\r\n      window.removeEventListener('keydown', toggleModal);\r\n    };\r\n  }, [toggleModal]);\r\n\r\n  const { largeImageURL, tags } = picture;\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={overlayClickHandler}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageURL} alt={tags} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired,\r\n  picture: PropTypes.shape({\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","const BASE_URL = 'https://pixabay.com/api';\r\nconst ACCESS_KEY = '23893693-5116f7539f40f5f078cda9a9c';\r\n\r\nexport async function pictureService(searchQuery, page) {\r\n  const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${ACCESS_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  const pictures = await fetch(url).then(res => res.json());\r\n\r\n  return pictures.hits;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { ImageGallery } from './components/ImageGallery';\r\nimport { Searchbar } from './components/Searchbar';\r\nimport { Button } from './components/Button';\r\nimport { Modal } from './components/Modal';\r\nimport { pictureService } from './services/picture-service';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport './App.css';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [pictures, setPictures] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [modalPicture, setModalPicture] = useState({});\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery === '') {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n\r\n    pictureService(searchQuery, page).then(pictures => {\r\n      page > 1\r\n        ? setPictures(prevState => [...prevState, ...pictures])\r\n        : setPictures(pictures);\r\n\r\n      setStatus(Status.RESOLVED);\r\n    });\r\n  }, [searchQuery, page]);\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(prevState => !prevState);\r\n  };\r\n\r\n  const getModalPicture = (largeImageURL, tags) => {\r\n    setModalPicture({ largeImageURL, tags });\r\n  };\r\n\r\n  const formSubmitHandler = searchQuery => {\r\n    setPage(1);\r\n    setSearchQuery(searchQuery);\r\n  };\r\n\r\n  const loadMoreBtnHandler = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar formSubmitHandler={formSubmitHandler} />\r\n\r\n      <ImageGallery\r\n        pictures={pictures}\r\n        toggleModal={toggleModal}\r\n        getModalPicture={getModalPicture}\r\n      />\r\n\r\n      {status === 'resolved' && <Button btnHandler={loadMoreBtnHandler} />}\r\n\r\n      {modalOpen && <Modal toggleModal={toggleModal} picture={modalPicture} />}\r\n\r\n      {status === 'pending' && (\r\n        <Loader\r\n          className=\"Loader\"\r\n          type=\"BallTriangle\"\r\n          color=\"#3f51b5\"\r\n          height={80}\r\n          width={80}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// componentDidUpdate(prevProps, prevState) {\r\n//   const { page } = this.state;\r\n//   const prevQuery = prevState.searchQuery;\r\n//   const nextQuery = this.state.searchQuery;\r\n//   const prevPage = prevState.page;\r\n//   const nextPage = this.state.page;\r\n\r\n//   if (prevQuery !== nextQuery || prevPage !== nextPage) {\r\n//     this.setState({ status: Status.PENDING });\r\n//     pictureService(nextQuery, page).then(pictures => {\r\n//       this.setState(prevState =>\r\n//         nextPage > 1\r\n//           ? {\r\n//               pictures: [...prevState.pictures, ...pictures],\r\n//               status: Status.RESOLVED,\r\n//             }\r\n//           : {\r\n//               pictures,\r\n//               status: Status.RESOLVED,\r\n//             },\r\n//       );\r\n//     });\r\n//   }\r\n// }\r\n\r\n// pageReset = () => {\r\n//   this.setState({\r\n//     page: 1,\r\n//   });\r\n// };\r\n\r\n// toggleModal = () => {\r\n//   this.setState(({ modalOpen }) => ({ modalOpen: !modalOpen }));\r\n// };\r\n\r\n// getModalPicture = (largeImageURL, tags) => {\r\n//   this.setState({ modalPicture: { largeImageURL, tags } });\r\n// };\r\n\r\n// formSubmitHandler = searchQuery => {\r\n//   this.pageReset();\r\n//   this.setState({\r\n//     searchQuery,\r\n//   });\r\n// };\r\n\r\n// loadMoreBtnHandler = () => {\r\n//   this.setState(prevState => ({ page: prevState.page + 1 }));\r\n// };\r\n\r\n//   const { status } = this.state;\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Searchbar formSubmitHandler={this.formSubmitHandler} />\r\n\r\n//       <ImageGallery\r\n//         pictures={this.state.pictures}\r\n//         toggleModal={this.toggleModal}\r\n//         getModalPicture={this.getModalPicture}\r\n//       />\r\n\r\n//       {status === 'resolved' && (\r\n//         <Button btnHandler={this.loadMoreBtnHandler} />\r\n//       )}\r\n\r\n//       {this.state.modalOpen && (\r\n//         <Modal\r\n//           toggleModal={this.toggleModal}\r\n//           picture={this.state.modalPicture}\r\n//         />\r\n//       )}\r\n\r\n//       {status === 'pending' && (\r\n//         <Loader\r\n//           className=\"Loader\"\r\n//           type=\"BallTriangle\"\r\n//           color=\"#3f51b5\"\r\n//           height={80}\r\n//           width={80}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__PrRzC\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__3RMvo\"};"],"sourceRoot":""}